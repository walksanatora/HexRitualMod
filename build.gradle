buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        // Make sure this version matches the one included in Kotlin for Forge
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10'
        // OPTIONAL Gradle plugin for Kotlin Serialization
        classpath 'org.jetbrains.kotlin:kotlin-serialization:1.6.10'
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'
apply plugin: 'org.spongepowered.mixin'

apply from: 'https://raw.githubusercontent.com/thedarkcolour/KotlinForForge/site/thedarkcolour/kotlinforforge/gradle/kff-3.6.0.gradle'

version = '1.0.0'
group = 'com.walksanator.RitualHex'
archivesBaseName = 'RitualHex'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    // Change to your preferred mappings
    mappings channel: 'official', version: '1.18.2'
    // Add your AccessTransformer
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,LOADING,CORE'
            property 'forge.logging.console.level', 'debug'

            mods {
                RitualHex {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.logging.markers', 'SCAN,LOADING,CORE'
            property 'forge.logging.console.level', 'debug'

            mods {
                RitualHex {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,LOADING,CORE'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'RitualHex', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources')

            mods {
                RitualHex {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include assets and data from data generators
sourceSets.main.resources { srcDirs 'src/generated/resources/' }

repositories {
    // Put repositories for dependencies here
    // ForgeGradle automatically adds the Forge maven and Maven Central for you

    // If you have mod jar dependencies in ./libs, you can declare them as a repository like so:
    flatDir {
        dir 'libs'
    }
    maven { url 'https://maven.blamejared.com' }
    maven {
        url "https://cursemaven.com"
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
}

dependencies {
    // Use the latest version of Minecraft Forge
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${minecraft_version}-${patchouli_version}:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${minecraft_version}-${patchouli_version}")

    compileOnly fg.deobf("curse.maven:paucal-597824:3829999") //paucal
    runtimeOnly fg.deobf("curse.maven:paucal-597824:3829999") //paucal

    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}:9.5.3.143:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}:9.5.3.143")


    implementation fg.deobf('RitualHex:hexcasting-forge-1.18.2:0.9.2')
}

compileKotlin {
    kotlinOptions.jvmTarget = "17"
}

jar {
    manifest {
        attributes([
                'Specification-Title': "RitualHex",
                'Specification-Vendor': "RitualHexsareus",
                'Specification-Version': "1", // We are version 1 of ourselves
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor' :"RitualHexsareus",
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
